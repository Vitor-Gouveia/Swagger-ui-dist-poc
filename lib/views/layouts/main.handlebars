<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content="SwaggerIU" />
  <title>SwaggerUI</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap"
    rel="stylesheet">
  <link rel="stylesheet" href="https://unpkg.com/swagger-ui-dist@4.4.1/swagger-ui.css" />
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html {
      background: #fff;
    }

    * {
      font-family: "Montserrat";
    }

    body {
      width: 100%;
      margin: 0 auto;

      display: flex;
      flex-direction: column;
      gap: 40px;
    }

    header {
      width: 100%;
    }

    header img {
      height: 40px;
    }

    header section {
      max-width: 1100px;
      width: 100%;

      display: flex;
      align-items: center;
      justify-content: flex-start;
      justify-content: space-between;
      margin: 0 auto;
    }

    main {
      display: flex;
      gap: 20px;
    }

    ul {
      list-style: none;
    }

    a {
      color: inherit;
      text-decoration: none;
    }

    aside {
      color: #5C666F;
      background: #EEEEEE;
      padding: 20px;
    }

    aside .wrapper {
      position: sticky;
      top: 20px;
      overflow: auto;

      display: flex;
      flex-direction: column;
      gap: 40px;
    }

    aside ul {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    aside ul a:hover {
      color: #0c0e0f
    }

    ul ul {
      padding-left: 10px !important;
    }

    .topbar,
    .information-container {
      display: none;
    }

    .swagger-ui .wrapper {
      padding: 0px;
    }

    main aside {
      width: 300px;
    }

    main #swagger-ui {
      width: 100%;
    }

    .lv1-nesting {
      padding-left: 10px;
    }

    main #right {
      padding: 20px;

      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    #right > section {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    [data-code="400"] {
      border: 1px solid hsl(360, 99%, 69%);
      background: hsla(360, 100%, 70%, 0.4);
    }

    .opblock-tag-section h3 {
      display: none !important;
    }

    .opblock-summary-path {
      flex-shrink: 1 !important;
      max-width: none !important;
    }

    .operation-tag-content > span {
      display: flex;
      flex-direction: column;
      gap: 5px;
    }

    .models {
      margin-bottom: 0px !important;
    }

    #description {

    }
  </style>
</head>

<body>
  <main>
    <aside>
      <div class="wrapper">
        <header>
          <a href="https://minu.biz">
            <img src="/static/logo_minu.biz.png" alt="">
          </a>
        </header>
        <ul>
          <li>
            <a href="#1">1. Introdução</a>
          </li>
          <li>
            <a href="#2">2. Conceitos</a>
          </li>

          <li>
            <a href="#3">3. Descritivo Técnico</a>
            <ul>
              <li>
                <a href="#3.1">3.1. Integração Minu API Gateway</a>
              </li>
              <li>
                <a href="#3.2">3.2. Criptografia a nível de mensagem</a>
              </li>
            </ul>
          </li>
          <li>
            <a href="#4">4. Autenticação</a>
          </li>
        </ul>
      </div>
    </aside>

    <div id="right">
      <section>
        <h1 id="1">1. Introdução</h1>
        <div id="description">
          <p>O Minu.biz é uma solução tecnológica de engajamento que permite promover e melhorar o desempenho de
            produtos/serviços e
            a percepção de marcas através da aplicação dos conceitos de micro recompensas e engajamento gradual e progressivo.
          </p>
        
          <p>A partir do monitoramento das interações do consumidor com marcas, produtos e serviços, o Minu.biz incentiva novas
            interações de recompensas, e comportamentos específicos do consumidor.</p>
        </div>
      </section>

      <hr />

      <section>
        <h1 id="2">2. Conceitos</h1>

        <p>
          <strong>Cliente Corporativo:</strong> Empresa que utiliza a solução tecnológica da Minu para reconhecer e recompensar seus clientes.
        </p>
        
        <p>
          <strong>Consumidor Final:</strong> Cliente do Cliente Corporativo é a pessoa que usufrui das recompensas oferecidas nas campanhas.
        </p>
        
        <p>
          <strong>Recompensas:</strong> São os prêmios disponibilizados na Plataforma Minu.biz e oferecidos para o Consumidor Final através das
          campanhas.
        </p>
        
        <p>
          <strong>Campanha:</strong> Ação de engajamento elaborada pelo Cliente Corporativo através do Minu.biz, que recompensa o Consumidor Final.
        </p>
        
        <p>
          <strong>Pedido:</strong> Solicitação realizada pelo Cliente Corporativo para a entrega de recompensa ao Consumidor Final engajado.
        </p>
        
        <p>
          <strong>Alianças:</strong> Provedores de insumos (produtos e serviços) integrados à solução tecnológica da Minu.
        </p>
      </section>

      <hr />

      <section>
        <h1 id="3">3. Descritivo Técnico</h1>
        <h3 id="3.1" class="lv1-nesting">3.1. Integração Minu API Gateway</h3>
        <p class="lv1-nesting">O Minu.biz possui uma camada de integração chamada Minu API Gateway, que utiliza API RESTful para realizar todas as
        chamadas de autenticação, criação e consulta de campanhas e envio e consulta de recompensas. Algumas dessas chamadas
        possuem suporte à comunicação criptografada através da técnica de criptografia a nível de mensagem.</p>
        <h3 id="3.2" class="lv1-nesting">3.2. Criptografia a nível de mensagem</h3>
        <p class="lv1-nesting">Criptografia a nível de mensagem é uma técnica onde as mensagens trocadas entre duas partes são criptografadas com um
        algoritmo de criptografia assimétrico, onde as duas partes possuem as chaves necessárias para criptografar e
        descriptografar as mensagens enviadas. Isso fornece uma segurança para a comunicação, já que a criptografia acontece na
        camada de aplicação e não somente na camada de transporte.</p>
      </section>

      <hr />

      <section>
        <h1 id="4">4. Autenticação - Com Suporte a criptografia a nível de mensagem</h1>
        <p>Para realizar a conexão com nossa API, será necessário solicitar um token de acesso que, posteriormente, será utilizado
        no Header de todas as chamadas.</p>
        <p>Na solicitação do token de acesso, será necessário o <strong>client_id</strong> e <strong>client_secret</strong>, fornecidos previamente pela Minu.</p>
      </section>

      <div id="swagger-ui-api2"></div>
    </div>
  </main>
  <script src="https://unpkg.com/swagger-ui-dist@4.4.1/swagger-ui-bundle.js" crossorigin></script>
  <script src="https://unpkg.com/swagger-ui-dist@4.4.1/swagger-ui-standalone-preset.js" crossorigin></script>
  <script type="module">
    window.onload = () => {
      window.ui = SwaggerUIBundle({
        url: "http://localhost:3000/static/data.json",
        dom_id: '#swagger-ui-api2',
        presets: [
          SwaggerUIBundle.presets.apis,
          SwaggerUIStandalonePreset
        ],
        plugins: [
          SwaggerUIBundle.plugins.DownloadUrl
        ],
        layout: "StandaloneLayout",
      });
    };
  </script>
  <script defer>
    const fetchJSON = async (url) => {
      const response = await fetch(url)
      const data = await response.text()
      return data
    }

    const runTOC = async () => {
      const json = await fetchJSON("http://localhost:3000/api")
      const obj = JSON.parse(json)
      const formattedPaths = Object
        .values(obj.paths)
        .map(props => {
          const [operation] = Object.keys(props)
          // const { title } = props
          const { operationId } = props[operation]

          return { title: operationId, slug: `operations-default-${operationId}` }
        })
      
      formattedPaths.forEach(path => {
        const item = document.createElement("li")
        const link = document.createElement("a")

        link.href = `#${path.slug}`
        link.innerText = path.title

        item.appendChild(link)

        document
          .querySelector("aside ul")
          .appendChild(item)
      })
    }
    runTOC()
  </script>
  <script defer>
    setTimeout(() => {
      const operations = document.querySelectorAll(".operation-tag-content > span")
      operations.forEach(op => {
        const requestContent = op.querySelector(".opblock")

        // create new element
        const title = document.createElement("h4")
        title.innerHTML = requestContent.id.split("-")[2]

        op.insertBefore(title, requestContent)
      })
    }, 500)
  </script>
</body>

</html>