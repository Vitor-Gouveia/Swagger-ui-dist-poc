{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "api-dev.minu.biz",
    "version" : "2022-11-23T13:40:19Z"
  },
  "servers" : [ {
    "url" : "https://api-dev.minu.biz"
  } ],
  "paths" : {
    "/v1/campaign/{id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404 response",
            "content" : { }
          },
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseGetCampaignById"
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : { }
          },
          "401" : {
            "description" : "401 response",
            "content" : { }
          },
          "500" : {
            "description" : "500 response",
            "content" : { }
          }
        }
      }
    },
    "/offer" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Empty"
                }
              }
            }
          }
        }
      }
    },
    "/v1/oauth/token" : {
      "post" : {
        "parameters" : [ {
          "name" : "x-id",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-encrypted",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestAuth0Token"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseAuth0Token"
                }
              }
            }
          }
        }
      }
    },
    "/v1/prizes" : {
      "get" : {
        "parameters" : [ {
          "name" : "x-id",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-encrypted",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponsePrizes"
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaign" : {
      "post" : {
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestCreateCampaign"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseCreateCampaign"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiences/{experienceName}/requests/{requestId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "experienceName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-id",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-encrypted",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Empty"
                }
              }
            }
          }
        }
      }
    },
    "/codes" : {
      "post" : {
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestCodes"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "404 response",
            "content" : { }
          },
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Empty"
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : { }
          },
          "401" : {
            "description" : "401 response",
            "content" : { }
          },
          "500" : {
            "description" : "500 response",
            "content" : { }
          }
        }
      }
    },
    "/chapter" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Empty"
                }
              }
            }
          }
        }
      }
    },
    "/codes/validate" : {
      "post" : {
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "404 response",
            "content" : { }
          },
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Empty"
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : { }
          },
          "401" : {
            "description" : "401 response",
            "content" : { }
          },
          "500" : {
            "description" : "500 response",
            "content" : { }
          }
        }
      }
    },
    "/v1/requests" : {
      "post" : {
        "parameters" : [ {
          "name" : "x-id",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-encrypted",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestMinubizApi"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "200 response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Empty"
                }
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "content" : { }
          },
          "500" : {
            "description" : "500 response",
            "content" : { }
          },
          "401" : {
            "description" : "401 response",
            "content" : { }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Empty" : {
        "title" : "Empty Schema",
        "type" : "object"
      },
      "ResponseCreateCampaign" : {
        "required" : [ "campaignId" ],
        "type" : "object",
        "properties" : {
          "campaignId" : {
            "type" : "string"
          }
        },
        "description" : "Retorno da rota de criação de campanha"
      },
      "RequestMinubizApi" : {
        "properties" : {
          "experience" : {
            "minLength" : 1,
            "type" : "string",
            "description" : ""
          },
          "registeredCallbackUrl" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Endpoint para envio do callback com informações do registro do trigger (opcional)",
            "format" : "uri"
          },
          "processedCallbackUrl" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Endpoint para envio do callback com informações do processamento do trigger (opcional)",
            "format" : "uri"
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "mobile" : {
                "type" : "string",
                "description" : "Número do celular do consumidor bonificado"
              },
              "email" : {
                "type" : "string",
                "description" : "Endereço de email consumidor bonificado"
              },
              "order_id" : {
                "type" : "string",
                "description" : "ID do pedido que deve ser único por campanha"
              },
              "reward_value" : {
                "type" : "integer",
                "description" : "Valor da bonificação quando a recompensa não possui valor fixo"
              }
            },
            "anyOf" : [ {
              "required" : [ "mobile", "order_id" ],
              "type" : "object"
            }, {
              "required" : [ "email", "order_id" ],
              "type" : "object"
            } ]
          },
          "encryptedPayload" : {
            "type" : "object"
          }
        },
        "additionalProperties" : false,
        "oneOf" : [ {
          "required" : [ "data", "experience" ],
          "type" : "object"
        }, {
          "required" : [ "encryptedPayload" ],
          "type" : "object"
        } ]
      },
      "RequestAuth0Token" : {
        "type" : "object",
        "properties" : {
          "client_id" : {
            "type" : "string"
          },
          "client_secret" : {
            "type" : "string"
          },
          "audience" : {
            "type" : "string"
          },
          "grant_type" : {
            "type" : "string"
          },
          "encryptedPayload" : {
            "type" : "object"
          }
        },
        "oneOf" : [ {
          "required" : [ "client_id", "client_secret" ],
          "type" : "object"
        }, {
          "required" : [ "encryptedPayload" ],
          "type" : "object"
        } ]
      },
      "RequestCreateCampaign" : {
        "required" : [ "endDate", "experience", "settings", "startDate", "type" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string"
          },
          "reach" : {
            "type" : "object",
            "properties" : {
              "total" : {
                "type" : "integer"
              },
              "expected" : {
                "type" : "integer"
              }
            }
          },
          "experience" : {
            "required" : [ "sponsor", "title" ],
            "type" : "object",
            "properties" : {
              "title" : {
                "type" : "string"
              },
              "sponsor" : {
                "type" : "string",
                "description" : "Describes who's the campaign sponsor title"
              }
            },
            "description" : "Basic informations for campaign"
          },
          "settings" : {
            "type" : "object",
            "description" : "Settings for the campaign",
            "oneOf" : [ {
              "required" : [ "rewardLimit" ],
              "type" : "object",
              "properties" : {
                "rewardLimit" : {
                  "required" : [ "period", "quantity" ],
                  "type" : "object",
                  "properties" : {
                    "quantity" : {
                      "type" : "integer"
                    },
                    "period" : {
                      "type" : "string",
                      "enum" : [ "daily", "weekly", "monthly", "once" ]
                    }
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Settings for the campaign type pre-qualified-bonus"
            }, {
              "required" : [ "preQualifiedPrize", "rewardLimit" ],
              "type" : "object",
              "properties" : {
                "rewardLimit" : {
                  "required" : [ "period", "quantity" ],
                  "type" : "object",
                  "properties" : {
                    "quantity" : {
                      "type" : "integer"
                    },
                    "period" : {
                      "type" : "string",
                      "enum" : [ "daily", "weekly", "monthly", "once" ]
                    }
                  }
                },
                "preQualifiedPrize" : {
                  "type" : "string"
                }
              },
              "description" : "Settings for the campaign type pre-qualified-without-questions"
            }, {
              "required" : [ "defaultPrizeList", "prizes", "rewardLimit" ],
              "type" : "object",
              "properties" : {
                "rewardLimit" : {
                  "required" : [ "period", "quantity" ],
                  "type" : "object",
                  "properties" : {
                    "quantity" : {
                      "type" : "integer"
                    },
                    "period" : {
                      "type" : "string",
                      "enum" : [ "daily", "weekly", "monthly", "once" ]
                    }
                  }
                },
                "defaultPrizeList" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "prizes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "description" : "Settings for the campaign type multiple-choice"
            } ]
          }
        },
        "description" : "Representa a requisição feita para criação de campanha"
      },
      "RequestCodes" : {
        "required" : [ "cnpj" ],
        "type" : "object",
        "properties" : {
          "cnpj" : {
            "type" : "string"
          }
        },
        "description" : "Representa a requisição feita para criação de campanha"
      },
      "ResponseGetCampaignById" : {
        "required" : [ "createdAt", "endDate", "expectedReach", "experience", "experienceName", "settings", "startDate", "status", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Identificador da campanha"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Data no formato ISO 8601 que define o início da vigência da campanha"
          },
          "endDate" : {
            "type" : "string",
            "description" : "Data no formato ISO 8601 que define o final da vigência da campanha"
          },
          "expectedReach" : {
            "type" : "integer",
            "description" : "Número de consumidores em que se planeja atingir com a campanha."
          },
          "experience" : {
            "required" : [ "sponsor", "title" ],
            "type" : "object",
            "properties" : {
              "title" : {
                "type" : "string",
                "description" : "Título da campanha"
              },
              "sponsor" : {
                "type" : "string",
                "description" : "Nome da marca da campanha"
              }
            },
            "description" : "Basic informations for campaign"
          },
          "experienceName" : {
            "type" : "string",
            "description" : "Identificador da experiência utilizada na campanha"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Data no formato ISO 8601 que define o momento que a campanha foi criada"
          },
          "status" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Nome do status da campanha"
              },
              "timestamp" : {
                "type" : "string",
                "description" : "Data no formato ISO 8601 que define o momento que aquele status foi alcançado."
              },
              "detail" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "description" : "Descrição dos detalhes do status."
                  }
                },
                "description" : "Detalhes sobre o status da campanha."
              }
            },
            "description" : "Status da campanha no momento da consulta"
          },
          "type" : {
            "type" : "string",
            "description" : "Tipo de mecânica da campanha. Ex: multiple-choice (múltipla escolha), Recompensa Única ( type pre-qualified-without-questions)"
          },
          "settings" : {
            "type" : "object",
            "description" : "Configuração da mecânica de entrega da campanha",
            "oneOf" : [ {
              "required" : [ "rewardLimit" ],
              "type" : "object",
              "properties" : {
                "rewardLimit" : {
                  "required" : [ "period", "quantity" ],
                  "type" : "object",
                  "properties" : {
                    "quantity" : {
                      "type" : "integer"
                    },
                    "period" : {
                      "type" : "string",
                      "enum" : [ "daily", "weekly", "monthly", "once" ]
                    }
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Configuração para o tipo de campanha pre-qualified-bonus"
            }, {
              "required" : [ "preQualifiedPrize", "rewardLimit" ],
              "type" : "object",
              "properties" : {
                "rewardLimit" : {
                  "required" : [ "period", "quantity" ],
                  "type" : "object",
                  "properties" : {
                    "quantity" : {
                      "type" : "integer"
                    },
                    "period" : {
                      "type" : "string",
                      "enum" : [ "daily", "weekly", "monthly", "once" ]
                    }
                  }
                },
                "preQualifiedPrize" : {
                  "type" : "string"
                }
              },
              "description" : "Configuração para o tipo de campanha pre-qualified-without-questions"
            }, {
              "required" : [ "defaultPrizeList", "prizes", "rewardLimit" ],
              "type" : "object",
              "properties" : {
                "rewardLimit" : {
                  "required" : [ "period", "quantity" ],
                  "type" : "object",
                  "properties" : {
                    "quantity" : {
                      "type" : "integer"
                    },
                    "period" : {
                      "type" : "string",
                      "enum" : [ "daily", "weekly", "monthly", "once" ]
                    }
                  }
                },
                "defaultPrizeList" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "prizes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "description" : "Configuração para o tipo de campanha multiple-choice"
            } ]
          }
        },
        "description" : "Representa a resposta da requisição feita para consulta de campanha"
      },
      "ResponsePrizes" : {
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "prizes" : {
            "type" : "array",
            "items" : {
              "required" : [ "faceValue", "name", "price", "processingFee", "title" ],
              "type" : "object",
              "properties" : {
                "title" : {
                  "type" : "string"
                },
                "faceValue" : {
                  "type" : "number"
                },
                "price" : {
                  "type" : "number"
                },
                "name" : {
                  "type" : "string"
                },
                "processingFee" : {
                  "type" : "number"
                }
              }
            }
          },
          "encryptedData" : {
            "type" : "string"
          }
        },
        "oneOf" : [ {
          "required" : [ "category", "description", "prizes", "title" ],
          "type" : "object"
        }, {
          "required" : [ "encryptedData" ],
          "type" : "object"
        } ]
      },
      "ResponseAuth0Token" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "integer"
          },
          "token_type" : {
            "type" : "string"
          },
          "encryptedData" : {
            "type" : "string"
          }
        },
        "oneOf" : [ {
          "required" : [ "access_token", "expires_in", "token_type" ],
          "type" : "object"
        }, {
          "required" : [ "encryptedData" ],
          "type" : "object"
        } ]
      }
    }
  }
}