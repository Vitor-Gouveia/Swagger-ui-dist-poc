{
  "swagger" : "2.0",
  "info" : {
    "version" : "2022-11-23T13:40:19Z",
    "title" : "api-dev.minu.biz"
  },
  "host" : "api-dev.minu.biz",
  "schemes" : [ "https" ],
  "paths" : {
    "/chapter" : {
      "get" : {
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/codes" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RequestCodes",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RequestCodes"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            }
          },
          "400" : {
            "description" : "400 response"
          },
          "500" : {
            "description" : "500 response"
          },
          "401" : {
            "description" : "401 response"
          },
          "404" : {
            "description" : "404 response"
          }
        }
      }
    },
    "/codes/validate" : {
      "post" : {
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            }
          },
          "400" : {
            "description" : "400 response"
          },
          "500" : {
            "description" : "500 response"
          },
          "401" : {
            "description" : "401 response"
          },
          "404" : {
            "description" : "404 response"
          }
        }
      }
    },
    "/offer" : {
      "get" : {
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/v1/campaign" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RequestCreateCampaign",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RequestCreateCampaign"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ResponseCreateCampaign"
            }
          }
        }
      }
    },
    "/v1/campaign/{id}" : {
      "get" : {
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ResponseGetCampaignById"
            }
          },
          "400" : {
            "description" : "400 response"
          },
          "500" : {
            "description" : "500 response"
          },
          "401" : {
            "description" : "401 response"
          },
          "404" : {
            "description" : "404 response"
          }
        }
      }
    },
    "/v1/experiences/{experienceName}/requests/{requestId}" : {
      "get" : {
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "experienceName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-id",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-encrypted",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "requestId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            }
          }
        }
      }
    },
    "/v1/oauth/token" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-id",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-encrypted",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RequestAuth0Token",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RequestAuth0Token"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ResponseAuth0Token"
            }
          }
        }
      }
    },
    "/v1/prizes" : {
      "get" : {
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-id",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-encrypted",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ResponsePrizes"
            }
          }
        }
      }
    },
    "/v1/requests" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-id",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-encrypted",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RequestMinubizApi",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RequestMinubizApi"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            }
          },
          "400" : {
            "description" : "400 response"
          },
          "401" : {
            "description" : "401 response"
          },
          "500" : {
            "description" : "500 response"
          }
        }
      }
    }
  },
  "definitions" : {
    "Empty" : {
      "type" : "object",
      "title" : "Empty Schema"
    },
    "ResponseCreateCampaign" : {
      "required" : [ "campaignId" ],
      "properties" : {
        "campaignId" : {
          "type" : "string"
        }
      },
      "description" : "Retorno da rota de criação de campanha"
    },
    "RequestMinubizApi" : {
      "type" : "object",
      "properties" : {
        "experience" : {
          "type" : "string",
          "description" : "",
          "minLength" : 1
        },
        "registeredCallbackUrl" : {
          "type" : "string",
          "format" : "uri",
          "description" : "Endpoint para envio do callback com informações do registro do trigger (opcional)",
          "minLength" : 1
        },
        "processedCallbackUrl" : {
          "type" : "string",
          "format" : "uri",
          "description" : "Endpoint para envio do callback com informações do processamento do trigger (opcional)",
          "minLength" : 1
        },
        "data" : {
          "type" : "object",
          "properties" : {
            "mobile" : {
              "type" : "string",
              "description" : "Número do celular do consumidor bonificado"
            },
            "email" : {
              "type" : "string",
              "description" : "Endereço de email consumidor bonificado"
            },
            "order_id" : {
              "type" : "string",
              "description" : "ID do pedido que deve ser único por campanha"
            },
            "reward_value" : {
              "type" : "integer",
              "description" : "Valor da bonificação quando a recompensa não possui valor fixo"
            }
          }
        },
        "encryptedPayload" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "RequestAuth0Token" : {
      "type" : "object",
      "properties" : {
        "client_id" : {
          "type" : "string"
        },
        "client_secret" : {
          "type" : "string"
        },
        "audience" : {
          "type" : "string"
        },
        "grant_type" : {
          "type" : "string"
        },
        "encryptedPayload" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "RequestCreateCampaign" : {
      "required" : [ "endDate", "experience", "settings", "startDate" ],
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "reach" : {
          "type" : "object",
          "properties" : {
            "total" : {
              "type" : "integer"
            },
            "expected" : {
              "type" : "integer"
            }
          }
        },
        "experience" : {
          "type" : "object",
          "description" : "Basic informations for campaign",
          "properties" : {
            "title" : {
              "type" : "string"
            },
            "sponsor" : {
              "type" : "string",
              "description" : "Describes who's the campaign sponsor title"
            }
          },
          "required" : [ "sponsor", "title" ]
        },
        "settings" : {
          "type" : "object",
          "description" : "Settings for the campaign",
          "properties" : { }
        }
      },
      "description" : "Representa a requisição feita para criação de campanha"
    },
    "RequestCodes" : {
      "type" : "object",
      "required" : [ "cnpj" ],
      "properties" : {
        "cnpj" : {
          "type" : "string"
        }
      },
      "description" : "Representa a requisição feita para criação de campanha"
    },
    "ResponseGetCampaignById" : {
      "required" : [ "createdAt", "endDate", "expectedReach", "experience", "experienceName", "settings", "startDate", "status", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identificador da campanha"
        },
        "startDate" : {
          "type" : "string",
          "description" : "Data no formato ISO 8601 que define o início da vigência da campanha"
        },
        "endDate" : {
          "type" : "string",
          "description" : "Data no formato ISO 8601 que define o final da vigência da campanha"
        },
        "expectedReach" : {
          "type" : "integer",
          "description" : "Número de consumidores em que se planeja atingir com a campanha."
        },
        "experience" : {
          "type" : "object",
          "description" : "Basic informations for campaign",
          "properties" : {
            "title" : {
              "type" : "string",
              "description" : "Título da campanha"
            },
            "sponsor" : {
              "type" : "string",
              "description" : "Nome da marca da campanha"
            }
          },
          "required" : [ "sponsor", "title" ]
        },
        "experienceName" : {
          "type" : "string",
          "description" : "Identificador da experiência utilizada na campanha"
        },
        "createdAt" : {
          "type" : "string",
          "description" : "Data no formato ISO 8601 que define o momento que a campanha foi criada"
        },
        "status" : {
          "type" : "object",
          "description" : "Status da campanha no momento da consulta",
          "properties" : {
            "name" : {
              "type" : "string",
              "description" : "Nome do status da campanha"
            },
            "timestamp" : {
              "type" : "string",
              "description" : "Data no formato ISO 8601 que define o momento que aquele status foi alcançado."
            },
            "detail" : {
              "type" : "object",
              "description" : "Detalhes sobre o status da campanha.",
              "properties" : {
                "description" : {
                  "type" : "string",
                  "description" : "Descrição dos detalhes do status."
                }
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "Tipo de mecânica da campanha. Ex: multiple-choice (múltipla escolha), Recompensa Única ( type pre-qualified-without-questions)"
        },
        "settings" : {
          "type" : "object",
          "description" : "Configuração da mecânica de entrega da campanha",
          "properties" : { }
        }
      },
      "description" : "Representa a resposta da requisição feita para consulta de campanha"
    },
    "ResponsePrizes" : {
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "prizes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "title" : {
                "type" : "string"
              },
              "faceValue" : {
                "type" : "number"
              },
              "price" : {
                "type" : "number"
              },
              "name" : {
                "type" : "string"
              },
              "processingFee" : {
                "type" : "number"
              }
            },
            "required" : [ "faceValue", "name", "price", "processingFee", "title" ]
          }
        },
        "encryptedData" : {
          "type" : "string"
        }
      }
    },
    "ResponseAuth0Token" : {
      "type" : "object",
      "properties" : {
        "access_token" : {
          "type" : "string"
        },
        "scope" : {
          "type" : "string"
        },
        "expires_in" : {
          "type" : "integer"
        },
        "token_type" : {
          "type" : "string"
        },
        "encryptedData" : {
          "type" : "string"
        }
      }
    }
  }
}
